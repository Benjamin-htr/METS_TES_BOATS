// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id        Int       @id @default(autoincrement())
  username  String    @unique
  password  String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  Traject   Traject[]
  Boat      Boat[]
}

model Traject {
  id            Int         @id @default(autoincrement())
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
  Destination   Coordinates @relation(fields: [destinationId], references: [id])
  destinationId Int         @unique
  User          User        @relation(fields: [userId], references: [id])
  userId        Int
  Boat          Boat        @relation(fields: [boatId], references: [id])
  boatId        Int
  Speed         Speed[]
  Wave          Wave[]
  Wind          Wind[]
}

model BoatModel {
  id        Int      @id @default(autoincrement())
  name      String
  maxSpeed  Float
  maxFuel   Float
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Boat      Boat[]
}

model Boat {
  id            Int         @id @default(autoincrement())
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
  name          String
  BoatModel     BoatModel   @relation(fields: [boatModelId], references: [id])
  boatModelId   Int
  Traject       Traject[]
  Fuel          Fuel[]
  User          User?       @relation(fields: [userId], references: [id])
  userId        Int?
  Coordinates   Coordinates @relation(fields: [coordinatesId], references: [id])
  coordinatesId Int         @unique
}

model Fuel {
  id          Int      @id @default(autoincrement())
  consumption Float
  remaining   Float
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  Boat        Boat     @relation(fields: [boatId], references: [id])
  boatId      Int
}

model Speed {
  id        Int      @id @default(autoincrement())
  speed     Float //en noeuds
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Traject   Traject  @relation(fields: [trajectId], references: [id])
  trajectId Int
}

model Wave {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  height    Float //en mètres
  frequency Float //en hertz
  Traject   Traject  @relation(fields: [trajectId], references: [id])
  trajectId Int
}

model Wind {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  direction Float //en degrés
  speed     Float //en noeuds
  Traject   Traject  @relation(fields: [trajectId], references: [id])
  trajectId Int
}

model Coordinates {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  latitude  Float
  longitude Float
  Boat      Boat?
  Traject   Traject?
}
